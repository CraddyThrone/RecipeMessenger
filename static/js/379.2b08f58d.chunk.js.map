{"version":3,"file":"static/js/379.2b08f58d.chunk.js","mappings":"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","sources":["assets/NoPhoto.jsx","components/AddPost.js","assets/Delete.jsx","assets/NoPosts.jsx","components/Favorites.js","components/InPost.js"],"sourcesContent":["import React from \"react\"; \n\nconst NoPhoto = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} color={\"#000000\"} fill={\"none\"}>\n    <path d=\"M6 17.9745C6.1287 19.2829 6.41956 20.1636 7.07691 20.8209C8.25596 22 10.1536 22 13.9489 22C17.7442 22 19.6419 22 20.8209 20.8209C22 19.6419 22 17.7442 22 13.9489C22 10.1536 22 8.25596 20.8209 7.07691C20.1636 6.41956 19.2829 6.1287 17.9745 6\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n    <path d=\"M2 10C2 6.22876 2 4.34315 3.17157 3.17157C4.34315 2 6.22876 2 10 2C13.7712 2 15.6569 2 16.8284 3.17157C18 4.34315 18 6.22876 18 10C18 13.7712 18 15.6569 16.8284 16.8284C15.6569 18 13.7712 18 10 18C6.22876 18 4.34315 18 3.17157 16.8284C2 15.6569 2 13.7712 2 10Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n    <path d=\"M2 11.1185C2.61902 11.0398 3.24484 11.001 3.87171 11.0023C6.52365 10.9533 9.11064 11.6763 11.1711 13.0424C13.082 14.3094 14.4247 16.053 15 18\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinejoin=\"round\" />\n    <path d=\"M12.9998 7H13.0088\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n  </svg>\n);\n\nexport default NoPhoto;","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { changeAddPostState } from \"../store/slices\"\r\nimport { useRef } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { texts } from \"../assets/texts\"\r\nimport NoPhoto from \"../assets/NoPhoto\"\r\nimport { addFavoritPost } from \"../store/slices\"\r\nimport { nanoid } from \"@reduxjs/toolkit\"\r\n\r\nexport default function AddPost() {\r\n\r\n  const addPostWrapper = useRef(null)\r\n  const addPost = useRef(null)\r\n\r\n  const postImage = useRef(null)\r\n  const postName = useRef(null)\r\n  const postDescription = useRef(null)\r\n  const postIngredients = useRef(null)\r\n  const postRecipe = useRef(null)\r\n  const postImagePlaceholder = useRef(null)\r\n\r\n  let [currentTab, setCurrentTab] = useState(0)\r\n  const currentLang = useSelector(state => state.lang)\r\n\r\n\r\n  const isActive = useSelector(state => state.addPostActive)\r\n  const dispatch = useDispatch()\r\n\r\n  const [ingredientsValue, setIngredientsValue] = useState(null)\r\n  const [recipesValue, setRecipesValue] = useState(null)\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    if (isActive) {\r\n      addPostWrapper.current.classList.add('add-post-wrapper--active')\r\n      addPost.current.classList.add('add-post--active')\r\n      document.querySelector('body').style.overflow = 'hidden'\r\n      const tabs = document.querySelectorAll('.add-post__tab-line')\r\n      for (let i = 0; i <= tabs.length; i++) {\r\n        try {\r\n          tabs[i].classList.remove('add-post__tab-line--current')\r\n        } catch { }\r\n      }\r\n      tabs[currentTab].classList.add('add-post__tab-line--current')\r\n    }\r\n\r\n  })\r\n\r\n  function addPostWrapperHandler() {\r\n    addPostWrapper.current.classList.remove('add-post-wrapper--active')\r\n    addPost.current.classList.remove('add-post--active')\r\n    document.querySelector('body').style.overflow = 'auto'\r\n    dispatch(changeAddPostState(false))\r\n  }\r\n\r\n\r\n  let postImageUrl = 'placeholgers/food0.jpg'\r\n  function inputChangeHandler(e) {\r\n    const file = e.target.files[0]\r\n    let reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      postImagePlaceholder.current.style.backgroundImage = `url(${e.target.result})`\r\n      postImageUrl = e.target.result\r\n      \r\n      for (let i = 0; i <= postImagePlaceholder.current.children.length; i++) {\r\n        try {\r\n          postImagePlaceholder.current.children[i].style.display = 'none'\r\n        } catch {}\r\n      }\r\n      postImagePlaceholder.current.style.pointerEvents = 'none'\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n\r\n  function saveHandler() {\r\n\r\n    let postNameText, postDescriptionText, ingredientsText, recipeText\r\n\r\n    if (!postName.current.value) {\r\n      postNameText = postName.current.placeholder\r\n    }\r\n    else postNameText = postName.current.value\r\n\r\n    if (!postDescription.current.value) {\r\n      postDescriptionText = postDescription.current.placeholder\r\n    }\r\n    else postDescriptionText = postDescription.current.value\r\n\r\n    if (!ingredientsValue) {\r\n      ingredientsText = texts[currentLang].recipeIngredients\r\n    }\r\n    else ingredientsText = ingredientsValue\r\n\r\n    if (!recipesValue) {\r\n      recipeText = texts[currentLang].recipeRecipe\r\n    }\r\n    else recipeText = recipesValue\r\n\r\n    const resultObject = {\r\n      uuid: nanoid(),\r\n      postImageUrl: postImageUrl,\r\n      name: postNameText,\r\n      description: postDescriptionText,\r\n      author: 'I',\r\n      ingredients: ingredientsText.split(/\\n/),\r\n      method: recipeText,\r\n    }\r\n\r\n    dispatch(addFavoritPost(resultObject))\r\n\r\n\r\n    postImagePlaceholder.current.style.backgroundImage = `none`\r\n    for (let i = 0; i <= postImagePlaceholder.current.children.length; i++) {\r\n      try {\r\n        postImagePlaceholder.current.children[i].style.display = 'block'\r\n      } catch {}\r\n    }\r\n    postImagePlaceholder.current.style.pointerEvents = 'auto'\r\n\r\n\r\n    addPostWrapper.current.classList.remove('add-post-wrapper--active')\r\n    addPost.current.classList.remove('add-post--active')\r\n    document.querySelector('body').style.overflow = 'auto'\r\n\r\n    addPostWrapper.current.reset()\r\n    setIngredientsValue(null)\r\n    setRecipesValue(null)\r\n    setCurrentTab(0)\r\n\r\n    dispatch(changeAddPostState(false))\r\n\r\n  }\r\n\r\n  function Ingredients() {\r\n\r\n    return (\r\n      <textarea ref={postIngredients} className=\"add-post__content\" placeholder={texts[currentLang].recipeIngredients} onBlur={() => setIngredientsValue(postIngredients.current.value)}>{ingredientsValue}</textarea>\r\n    )\r\n  }\r\n\r\n  function Recipe() {\r\n    return (\r\n      <textarea ref={postRecipe} className=\"add-post__content\" placeholder={texts[currentLang].recipeRecipe} onBlur={() => setRecipesValue(postRecipe.current.value)}>{recipesValue}</textarea>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <form ref={addPostWrapper} className=\"add-post-wrapper\" onClick={addPostWrapperHandler}>\r\n      <div ref={addPost} className=\"add-post\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"add-post__image-placeholger\" ref={postImagePlaceholder}>\r\n          <div className=\"add-post__image-svg\">\r\n            <NoPhoto />\r\n          </div>\r\n          <span className=\"add-post__image-text\">{texts[currentLang].addPhoto}</span>\r\n          <input className=\"add-post__image-input\" type=\"file\" ref={postImage} accept=\"image/jpeg, image/jpg, image/png\" onChange={(e) => inputChangeHandler(e)} />\r\n        </div>\r\n        <div className=\"add-post__info\">\r\n          <input ref={postName} type=\"input\" className=\"add-post__name\" placeholder={texts[currentLang].recipeName} />\r\n          <textarea ref={postDescription} className=\"add-post__description\" placeholder={texts[currentLang].recipeDescription}></textarea>\r\n        </div>\r\n        <div className=\"add-post__tabs\">\r\n          <div className=\"add-post__tab\" onClick={() => setCurrentTab(0)}>\r\n            <div>{texts[currentLang].ingredients}</div>\r\n            <div className=\"add-post__tab-line\"></div>\r\n          </div>\r\n          <div className=\"add-post__tab\" onClick={() => setCurrentTab(1)}>\r\n            <div>{texts[currentLang].recipe}</div>\r\n            <div className=\"add-post__tab-line\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"add-post__content-wrapper\">\r\n          {\r\n            currentTab == 0 ? (<Ingredients />) :\r\n              (<Recipe />)\r\n          }\r\n        </div>\r\n        <div className=\"add-post__button-section\">\r\n          <button type=\"button\" className=\"add-post__button\" onClick={saveHandler} >{texts[currentLang].save}</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}","import React from \"react\"; \n\nconst Delete = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} color={\"#000000\"} fill={\"none\"}>\n    <path d=\"M19.5 5.5L18.8803 15.5251C18.7219 18.0864 18.6428 19.3671 18.0008 20.2879C17.6833 20.7431 17.2747 21.1273 16.8007 21.416C15.8421 22 14.559 22 11.9927 22C9.42312 22 8.1383 22 7.17905 21.4149C6.7048 21.1257 6.296 20.7408 5.97868 20.2848C5.33688 19.3626 5.25945 18.0801 5.10461 15.5152L4.5 5.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n    <path d=\"M3 5.5H21M16.0557 5.5L15.3731 4.09173C14.9196 3.15626 14.6928 2.68852 14.3017 2.39681C14.215 2.3321 14.1231 2.27454 14.027 2.2247C13.5939 2 13.0741 2 12.0345 2C10.9688 2 10.436 2 9.99568 2.23412C9.8981 2.28601 9.80498 2.3459 9.71729 2.41317C9.32164 2.7167 9.10063 3.20155 8.65861 4.17126L8.05292 5.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n    <path d=\"M9.5 16.5L9.5 10.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n    <path d=\"M14.5 16.5L14.5 10.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n  </svg>\n);\n\nexport default Delete;","import React from \"react\"; \n\nconst NoPosts = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} color={\"#000000\"} fill={\"none\"}>\n    <path d=\"M2 2.20703L22 22.0009\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n    <path d=\"M6.56184 2.51505C8.5678 1.91313 14.3164 1.79188 17.7237 2.39736C18.5488 2.54399 19.3437 3.0755 19.7778 3.78202C20.5043 4.96464 20.4645 6.34166 20.4645 7.72387L20.3454 16.1787M3.99923 4.17153C3.36693 6.43927 3.45205 10.6 3.4932 16.7418C3.4985 17.5322 3.5359 18.3321 3.77395 19.087C4.1427 20.2564 4.75685 20.9661 6.10578 21.5373C6.68148 21.781 7.31205 21.8613 7.9387 21.8613H11.9824C15.7784 21.7689 17.31 21.373 18.9879 19.1833M10.4855 21.8613C12.8671 20.6539 14.0939 20.4861 13.782 17.45C13.7225 16.6637 14.1719 15.725 14.976 15.4733M20.4036 12.0447C20.1613 13.4807 19.9982 14.0146 19.0285 14.846\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n  </svg>\n);\n\nexport default NoPosts;","import { useEffect, useRef } from \"react\"\r\nimport Delete from \"../assets/Delete\"\r\nimport { removeFavoritPost } from \"../store/slices\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { store } from \"../store/store\"\r\nimport { useState } from \"react\"\r\nimport InPost from \"./InPost\"\r\nimport { openPost } from \"../store/slices\"\r\nimport AddPost from \"./AddPost\"\r\nimport NoPosts from \"../assets/NoPosts\"\r\nimport { texts } from \"../assets/texts\"\r\n\r\n\r\nexport function textOverflow(selector) {\r\n  const blocks = document.querySelectorAll(`${selector}`)\r\n\r\n  for (let i = 0; i <= blocks.length; i++) {\r\n    try {\r\n\r\n      if (blocks[i].scrollHeight > blocks[i].offsetHeight) {\r\n\r\n        while (blocks[i].scrollHeight > blocks[i].offsetHeight) {\r\n          console.log(blocks[i].scrollHeight, blocks[i].offsetHeight)\r\n          blocks[i].textContent = blocks[i].textContent.slice(0, -6) + '...'\r\n        }\r\n\r\n      } else {\r\n        console.log('false')\r\n      }\r\n\r\n    } catch { }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction Post({ name, description, postImageUrl, method, ingredients, orderInFavorite, uuid }) {\r\n\r\n\r\n  let post = useRef(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function deleteHandler(orderInFavorite, uuid) {\r\n\r\n\r\n    let posts = document.querySelectorAll('.favorites__post')\r\n    posts[orderInFavorite].classList.add('favorites__post--deleted')\r\n\r\n    for (let i = orderInFavorite + 1; i <= posts.length; i++) {\r\n      try {\r\n        posts[i].classList.add('favorites__post--transformed')\r\n      } catch { }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      store.dispatch(removeFavoritPost({\r\n        uuid: uuid,\r\n      }))\r\n\r\n      posts[orderInFavorite].classList.remove('favorites__post--deleted')\r\n    }, 400)\r\n  }\r\n\r\n  return (\r\n    <div ref={post} className=\"favorites__post\" onClick={() => dispatch(openPost({\r\n      name: name,\r\n      description: description,\r\n      postImageUrl: postImageUrl,\r\n      method: method,\r\n      ingredients: ingredients,\r\n\r\n    }))}>\r\n      <div className=\"favorites__post-inner\">\r\n\r\n        <div className='favorites__post-img-wrapper'>\r\n            <div style={{backgroundImage: `url(${postImageUrl})`}} className=\"favorites__post-img\"></div>\r\n        </div>\r\n\r\n        <div className=\"favorites__content-wrapper\">\r\n          <div className=\"favorites__post-content\">\r\n            <div className=\"favorites__post-name\">{name}</div>\r\n            <div className=\"favorites__post-description\">{description}</div>\r\n          </div>\r\n          <div className=\"favorites__post-like\" onClick={(e) => {\r\n            e.stopPropagation()\r\n            deleteHandler(orderInFavorite, uuid)\r\n          }}>\r\n            <Delete />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default function Favorites() {\r\n\r\n  let state = useSelector(state => state.favoritePosts)\r\n  let currentLang = useSelector(state => state.lang)\r\n\r\n  useEffect(() => {\r\n    textOverflow('.favorites__post-description')\r\n\r\n    return () => {\r\n      let posts = document.querySelectorAll('.favorites__post')\r\n      for (let i = 0; i <= posts.length; i++) {\r\n        try {\r\n          posts[i].classList.remove('favorites__post--transformed')\r\n        } catch { }\r\n      }\r\n    }\r\n  })\r\n\r\n  let favoritePostsFromStorage = JSON.parse(localStorage.getItem('favoritePosts'))\r\n  let favoritePosts = undefined\r\n\r\n  if (favoritePostsFromStorage.length > 0) {\r\n    favoritePosts = favoritePostsFromStorage.map((post) => {\r\n      return (\r\n        <Post name={post.name} description={post.description} postImageUrl={post.postImageUrl} method={post.method} ingredients={post.ingredients} orderInFavorite={favoritePostsFromStorage.indexOf(post)} uuid={post.uuid} />\r\n      )\r\n    })\r\n  } else {\r\n    return (\r\n      <div className=\"no-posts-yet\">\r\n        <AddPost />\r\n        <div className=\"no-posts__inner\">\r\n          <NoPosts />\r\n          <div>{texts[currentLang].noRecipes}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <InPost />\r\n      <AddPost />\r\n      <div className=\"favorites\">\r\n        {favoritePosts}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect, useRef } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { textOverflow } from \"./Favorites\"\r\nimport { openPost } from \"../store/slices\"\r\nimport { texts } from \"../assets/texts\"\r\nimport { useState } from \"react\"\r\n\r\n\r\nexport default function InPost() {\r\n\r\n\r\n  const state = useSelector(state => state.openPost)\r\n  const currentLang = useSelector(state => state.lang)\r\n  const inPostWrapper = useRef(null)\r\n  const inPost = useRef(null)\r\n  const postImage = useRef(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  let ingredients = null\r\n  let [currentTab, setCurrentTab] = useState(0)\r\n\r\n  if (Object.keys(state).length != 0) {\r\n    ingredients = state.ingredients.map(element => {\r\n      return (\r\n        <div className=\"in-post__ingredient\">{element}</div>\r\n      )   \r\n    })\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    if (Object.keys(state).length != 0) {\r\n      inPostWrapper.current.classList.add('in-post-wrapper--active')\r\n      inPost.current.classList.add('in-post--active')\r\n      document.querySelector('body').style.overflow = 'hidden'\r\n      postImage.current.style.backgroundImage = `url(${state.postImageUrl})`\r\n\r\n      textOverflow('.in-post__description')\r\n\r\n      const tabs = document.querySelectorAll('.in-post__tab-line')\r\n      for (let i = 0; i<= tabs.length; i++) {\r\n        try {\r\n            tabs[i].classList.remove('in-post__tab-line--current')\r\n        } catch {}\r\n      }\r\n      tabs[currentTab].classList.add('in-post__tab-line--current')\r\n\r\n    }\r\n  })\r\n\r\n  function inPostWrapperHandler() {\r\n    inPostWrapper.current.classList.remove('in-post-wrapper--active')\r\n    inPost.current.classList.remove('in-post--active')\r\n    postImage.current.style.backgroundImage = `none`\r\n    document.querySelector('body').style.overflow = 'auto'\r\n    dispatch(openPost({}))\r\n  }\r\n\r\n\r\n  return (\r\n    <div ref={inPostWrapper} onClick={inPostWrapperHandler} className=\"in-post-wrapper\">\r\n      <div ref={inPost} className=\"in-post\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"in-post__image-placeholger\">\r\n          <div className=\"in-post__image\" ref={postImage}></div>\r\n        </div>\r\n        <div className=\"in-post__info\">\r\n          <div className=\"in-post__name\">{state.name}</div>\r\n          <div className=\"in-post__description\">{state.description}</div>\r\n        </div>\r\n        <div className=\"in-post__tabs\">\r\n          <div className=\"in-post__tab\" onClick={(() => setCurrentTab(0))}>\r\n            <div>{texts[currentLang].ingredients}</div>\r\n            <div className=\"in-post__tab-line\"></div>\r\n          </div>\r\n          <div className=\"in-post__tab\"onClick={(() => setCurrentTab(1))} >\r\n            <div>{texts[currentLang].recipe}</div>\r\n            <div className=\"in-post__tab-line\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"in-post__content-wrapper\">\r\n           {\r\n            currentTab == 0 ? (<div className=\"in-post__content\">{ingredients}</div>) :\r\n            (<div className=\"in-post__content\">{state.method}</div>)\r\n           }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":["NoPhoto","_jsxs","xmlns","viewBox","width","height","color","fill","children","_jsx","d","stroke","strokeWidth","strokeLinejoin","strokeLinecap","AddPost","addPostWrapper","useRef","addPost","postImage","postName","postDescription","postIngredients","postRecipe","postImagePlaceholder","currentTab","setCurrentTab","useState","currentLang","useSelector","state","lang","isActive","addPostActive","dispatch","useDispatch","ingredientsValue","setIngredientsValue","recipesValue","setRecipesValue","useEffect","current","classList","add","document","querySelector","style","overflow","tabs","querySelectorAll","i","length","remove","postImageUrl","Ingredients","ref","className","placeholder","texts","recipeIngredients","onBlur","value","Recipe","recipeRecipe","onClick","changeAddPostState","e","stopPropagation","addPhoto","type","accept","onChange","file","target","files","reader","FileReader","onload","backgroundImage","concat","result","display","pointerEvents","readAsDataURL","inputChangeHandler","recipeName","recipeDescription","ingredients","recipe","postNameText","postDescriptionText","ingredientsText","recipeText","resultObject","uuid","nanoid","name","description","author","split","method","addFavoritPost","reset","save","Delete","NoPosts","textOverflow","selector","blocks","scrollHeight","offsetHeight","console","log","textContent","slice","Post","_ref","orderInFavorite","post","openPost","posts","setTimeout","store","removeFavoritPost","deleteHandler","Favorites","favoritePosts","favoritePostsFromStorage","JSON","parse","localStorage","getItem","map","indexOf","InPost","noRecipes","inPostWrapper","inPost","Object","keys","element"],"sourceRoot":""}